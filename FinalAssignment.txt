Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table =  10000
vii. hours table = 10000
viii. photo table =  10000
ix. review table =  10000
x. tip table =  10000
xi. user table = 10000
	
		SELECT 
		COUNT(*)
		FROM table_name;

2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = id: 10000
ii. Hours = business_id: 1562
iii. Category = business_id: 2643
iv. Attribute = business_id: 1115
v. Review = id:10000, business_id: 8090, user_id: 9581
vi. Checkin = business_id: 493
vii. Photo = id:10000, business_id: 6493
viii. Tip = user_id: 537, business_id: 3979
ix. User = id: 10000
x. Friend = user_id: 11
xi. Elite_years = user_id: 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.
	
		SELECT COUNT(DISTINCT(key_name))
		FROM table_name;

3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: "no"
	
	
	SQL code used to arrive at answer:

		SELECT 
		COUNT(*) AS NullCount
		FROM user
		WHERE id IS NULL OR 
		name IS NULL OR 
		review_count IS NULL OR 
		yelping_since IS NULL OR
		useful IS NULL OR 
		funny IS NULL OR 
		cool IS NULL OR 
		fans IS NULL OR 
		average_stars IS NULL OR 
		compliment_hot IS NULL OR 
		compliment_more IS NULL OR 
		compliment_profile IS NULL OR 
		compliment_cute IS NULL OR 
		compliment_list IS NULL OR 
		compliment_note IS NULL OR 
		compliment_plain IS NULL OR 
		compliment_cool IS NULL OR 
		compliment_funny IS NULL OR 
		compliment_writer IS NULL OR 
		compliment_photos IS NULL;
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max:5		avg:3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1.0		max:5.0		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53		avg:1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000	avg:24.2995

		SELECT
		MIN(Col_name)
		,MAX(Col_name)
		,AVG(Col_name) 
		FROM table_name;		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
		SELECT 
		city
		,SUM(review_count) AS SumRC
		FROM business
		GROUP BY city
		ORDER BY SumRC DESC;
	
	Copy and Paste the Result Below:
	
		+-----------------+-------+
		| city            | SumRC |
		+-----------------+-------+
		| Las Vegas       | 82854 |
		| Phoenix         | 34503 |
		| Toronto         | 24113 |
		| Scottsdale      | 20614 |
		| Charlotte       | 12523 |
		| Henderson       | 10871 |
		| Tempe           | 10504 |
		| Pittsburgh      |  9798 |
		| Montréal        |  9448 |
		| Chandler        |  8112 |
		| Mesa            |  6875 |
		| Gilbert         |  6380 |
		| Cleveland       |  5593 |
		| Madison         |  5265 |
		| Glendale        |  4406 |
		| Mississauga     |  3814 |
		| Edinburgh       |  2792 |
		| Peoria          |  2624 |
		| North Las Vegas |  2438 |
		| Markham         |  2352 |
		| Champaign       |  2029 |
		| Stuttgart       |  1849 |
		| Surprise        |  1520 |
		| Lakewood        |  1465 |
		| Goodyear        |  1155 |
		+-----------------+-------+
		(Output limit exceeded, 25 of 362 total rows shown)
	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT 
stars AS [star rating]
,SUM(review_count) AS count
FROM business
WHERE city = 'Avon'
GROUP BY stars;

Copy and Paste the Resulting Table Below (2 columns – star rating and count):

+-------------+-------+
| star rating | count |
+-------------+-------+
|         1.5 |    10 |
|         2.5 |     6 |
|         3.5 |    88 |
|         4.0 |    21 |
|         4.5 |    31 |
|         5.0 |     3 |
+-------------+-------+

ii. Beachwood

SQL code used to arrive at answer:

SELECT 
stars AS [star rating]
,SUM(review_count) AS count
FROM business
WHERE city = 'Beachwood'
GROUP BY stars;

Copy and Paste the Resulting Table Below (2 columns – star rating and count):
		
+-------------+-------+
| star rating | count |
+-------------+-------+
|         2.0 |     8 |
|         2.5 |     3 |
|         3.0 |    11 |
|         3.5 |     6 |
|         4.0 |    69 |
|         4.5 |    17 |
|         5.0 |    23 |
+-------------+-------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
		SELECT 
		name
		,review_count
		FROM user
		ORDER BY review_count DESC
		LIMIT 3;
		
	Copy and Paste the Result Below:
		
		+--------+--------------+
		| name   | review_count |
		+--------+--------------+
		| Gerald |         2000 |
		| Sara   |         1629 |
		| Yuri   |         1339 |
		+--------+--------------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:

	No. According to the below information, we can found the review doesn't correlate with more or less fan.

	SELECT
	review_count
	,fans
	FROM user
	ORDER BY fans DESC;

	+--------------+------+
	| review_count | fans |
	+--------------+------+
	|          609 |  503 |
	|          968 |  497 |
	|         1153 |  311 |
	|         2000 |  253 |
	|          930 |  173 |
	|          813 |  159 |
	|          377 |  133 |
	|         1215 |  126 |
	|          862 |  124 |
	|          834 |  120 |
	|          861 |  115 |
	|          408 |  111 |
	|          255 |  105 |
	|         1039 |  104 |
	|          694 |  101 |
	|         1246 |  101 |
	|          307 |   96 |
	|          584 |   89 |
	|          842 |   85 |
	|          220 |   84 |
	|          408 |   81 |
	|          178 |   80 |
	|          754 |   78 |
	|         1339 |   76 |
	|          161 |   73 |
	+--------------+------+
	(Output limit exceeded, 25 of 10000 total rows shown)
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: There were 1958 comments with the words "love" or "hate". But if we divide the code into the 	parts that look for the word "love" and the word "hate", we can get 1780 and 232 times respectively.

	
	SQL code used to arrive at answer:

	Method 1:

	SELECT 
	COUNT(*) AS CountText
	FROM review							
	WHERE text LIKE '%hate%' OR
	text LIKE '%love%';

	+-----------+
	| CountText |
	+-----------+
	|      1958 |
	+-----------+
	
	Method 2:

	SELECT 
	COUNT(*) AS CountLoveText
	FROM review							
	WHERE text LIKE '%hate%';

	+---------------+
	| CountLoveText |
	+---------------+
	|          1780 |
	+---------------+

	SELECT 
	COUNT(*) AS CountHateText
	FROM review							
	WHERE text LIKE '%hate%';

	+---------------+
	| CountHateText |
	+---------------+
	|           232 |
	+---------------+

10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	SELECT 
	name
	,fans
	FROM user
	ORDER BY fans DESC
	LIMIT 10;
	
	Copy and Paste the Result Below:

	+-----------+------+
	| name      | fans |
	+-----------+------+
	| Amy       |  503 |
	| Mimi      |  497 |
	| Harald    |  311 |
	| Gerald    |  253 |
	| Christine |  173 |
	| Lisa      |  159 |
	| Cat       |  133 |
	| William   |  126 |
	| Fran      |  124 |
	| Lissa     |  120 |
	+-----------+------+		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

	Yes, cases of 4-5 stars is shorter than cases of 2-3 stars.

ii. Do the two groups you chose to analyze have a different number of reviews?

	Yes, there are more times reviews in cases of 4-5 stars.       
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

SQL code used for analysis:

SELECT 
business.name,
business.review_count,
hours.hours,
postal_code,
CASE
    WHEN hours LIKE "%sunday%" THEN 0
    WHEN hours LIKE "%monday%" THEN 1
    WHEN hours LIKE "%tuesday%" THEN 2
    WHEN hours LIKE "%wednesday%" THEN 3
    WHEN hours LIKE "%thursday%" THEN 4
    WHEN hours LIKE "%friday%" THEN 5
    WHEN hours LIKE "%saturday%" THEN 6
END AS Day_of_Week,
CASE
    WHEN business.stars BETWEEN 2 AND 3 THEN '2-3 stars'
    WHEN business.stars BETWEEN 4 AND 5 THEN '4-5 stars'
END AS star_rating
FROM business INNER JOIN hours
ON business.id = hours.business_id
INNER JOIN category
ON category.business_id = business.id
WHERE (business.city == 'Las Vegas'
AND category.category LIKE 'food')
AND (business.stars BETWEEN 2 AND 3 OR
business.stars BETWEEN 4 AND 5)
GROUP BY stars,Day_of_Week
ORDER BY star_rating, Day_of_Week ASC;

+-----------------------------+--------------+-----------------------+-------------+-------------+-------------+
| name                        | review_count | hours                 | postal_code | Day_of_Week | star_rating |
+-----------------------------+--------------+-----------------------+-------------+-------------+-------------+
| Walgreens                   |            6 | Sunday|8:00-22:00     | 89121       |           0 | 2-3 stars   |
| Walgreens                   |            6 | Monday|8:00-22:00     | 89121       |           1 | 2-3 stars   |
| Walgreens                   |            6 | Tuesday|8:00-22:00    | 89121       |           2 | 2-3 stars   |
| Walgreens                   |            6 | Wednesday|8:00-22:00  | 89121       |           3 | 2-3 stars   |
| Walgreens                   |            6 | Thursday|8:00-22:00   | 89121       |           4 | 2-3 stars   |
| Walgreens                   |            6 | Friday|8:00-22:00     | 89121       |           5 | 2-3 stars   |
| Walgreens                   |            6 | Saturday|8:00-22:00   | 89121       |           6 | 2-3 stars   |
| Sweet Ruby Jane Confections |           30 | Monday|10:00-19:00    | 89123       |           1 | 4-5 stars   |
| Sweet Ruby Jane Confections |           30 | Tuesday|10:00-19:00   | 89123       |           2 | 4-5 stars   |
| Sweet Ruby Jane Confections |           30 | Wednesday|10:00-19:00 | 89123       |           3 | 4-5 stars   |
| Sweet Ruby Jane Confections |           30 | Thursday|10:00-19:00  | 89123       |           4 | 4-5 stars   |
| Sweet Ruby Jane Confections |           30 | Friday|10:00-19:00    | 89123       |           5 | 4-5 stars   |
| Sweet Ruby Jane Confections |           30 | Saturday|10:00-19:00  | 89123       |           6 | 4-5 stars   |
+-----------------------------+--------------+-----------------------+-------------+-------------+-------------+
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
         
         The averaged star rating of open is higher than close.(open: 3.679; close: 3.520)

ii. Difference 2:
         
         The averaged review of open is higher than close.(open: 31.757; close: 23.198)
         
SQL code used for analysis:

SELECT 
COUNT(DISTINCT(id)),
AVG(review_count),
SUM(review_count),
AVG(stars),
is_open
FROM business
GROUP BY is_open

+---------------------+-------------------+-------------------+---------------+---------+
| COUNT(DISTINCT(id)) | AVG(review_count) | SUM(review_count) |    AVG(stars) | is_open |
+---------------------+-------------------+-------------------+---------------+---------+
|                1520 |     23.1980263158 |             35261 | 3.52039473684 |       0 |
|                8480 |     31.7570754717 |            269300 | 3.67900943396 |       1 |
+---------------------+-------------------+-------------------+---------------+---------+
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
         
	Predict what topics will get more reviews.

ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
                           
        In order to help them understand the topic and the importance of the number of reviews. We need to have some columns about numbers of review, categories, star rating and so on.

iii. Output of your finished dataset:

+----------------------------------------+-------+--------------+-------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+---------+-------------------------+
| name                                   | state | review_count | stars | M           | Tue         | W           | Thu         | F           | Sat         | Sun         | is_open | categories              |
+----------------------------------------+-------+--------------+-------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+---------+-------------------------+
| Red Rock Canyon Visitor Center         | NV    |           32 |   4.5 | 8:00-16:30  | 8:00-16:30  | 8:00-16:30  | 8:00-16:30  | 8:00-16:30  | 8:00-16:30  | 8:00-16:30  |       1 | Active Life             |
| Wingstop                               | NV    |          123 |   3.0 | 11:00-0:00  | 11:00-0:00  | 11:00-0:00  | 11:00-0:00  | 11:00-0:00  | 11:00-0:00  | 11:00-0:00  |       1 | American (New)          |
| Gallagher's                            | AZ    |           60 |   3.0 | 11:00-22:00 | 11:00-22:00 | 11:00-22:00 | 11:00-2:00  | 11:00-2:00  | 9:00-2:00   | 9:00-0:00   |       1 | American (Traditional)  |
| Camden Fairview                        | NC    |            6 |   5.0 | 9:00-18:00  | 9:00-18:00  | 9:00-18:00  | 9:00-18:00  | 9:00-18:00  | 9:00-17:00  | 10:00-17:00 |       1 | Apartments              |
| Hi Scores - Blue Diamond               | NV    |          105 |   3.5 | 0:00-0:00   | 0:00-0:00   | 0:00-0:00   | 0:00-0:00   | 0:00-0:00   | 0:00-0:00   | 0:00-0:00   |       1 | Arcades                 |
| Dilworth Custom Framing                | NC    |            6 |   3.5 | None        | 10:00-18:00 | 10:00-18:00 | 10:00-18:00 | 10:00-18:00 | 10:00-15:00 | None        |       1 | Art Galleries           |
| Dilworth Custom Framing                | NC    |            6 |   3.5 | None        | 10:00-18:00 | 10:00-18:00 | 10:00-18:00 | 10:00-18:00 | 10:00-15:00 | None        |       1 | Arts & Crafts           |
| Hi Scores - Blue Diamond               | NV    |          105 |   3.5 | 0:00-0:00   | 10:00-18:00 | 10:00-18:00 | 10:00-18:00 | 10:00-18:00 | 10:00-15:00 | 0:00-0:00   |       1 | Arts & Entertainment    |
| Flaming Kitchen                        | ON    |           25 |   3.0 | 12:00-23:00 | 12:00-23:00 | 12:00-23:00 | 12:00-23:00 | 12:00-23:00 | 12:00-23:00 | 12:00-23:00 |       1 | Asian Fusion            |
| Brake Masters                          | AZ    |           22 |   4.0 | 8:30-17:00  | 8:30-17:00  | 8:30-17:00  | 8:30-17:00  | 8:30-17:00  | 9:00-15:00  | None        |       1 | Auto Repair             |
| Brake Masters                          | AZ    |           22 |   4.0 | 9:00-19:00  | 9:00-19:00  | 9:00-19:00  | 9:00-19:00  | 9:00-19:00  | 9:00-17:00  | None        |       1 | Automotive              |
| What A Bagel                           | ON    |            8 |   3.0 | 6:00-15:30  | 6:00-15:30  | 6:00-15:30  | 6:00-15:30  | 6:00-15:30  | 6:00-15:30  | None        |       1 | Bagels                  |
| Koko Bakery                            | OH    |          162 |   4.0 | 9:00-20:00  | 11:00-17:00 | 9:00-20:00  | 9:00-20:00  | 9:00-20:00  | 9:00-20:00  | 9:00-20:00  |       1 | Bakeries                |
| Bootleggers Modern American Smokehouse | AZ    |          431 |   4.0 | 11:00-22:00 | 11:00-22:00 | 11:00-22:00 | 11:00-22:00 | 11:00-2:00  | 11:00-2:00  | 11:00-22:00 |       1 | Barbeque                |
| Gallagher's                            | AZ    |           60 |   3.0 | 15:00-1:00  | 15:00-1:00  | 15:00-1:00  | 15:00-1:00  | 15:00-2:00  | 9:00-2:00   | 9:00-0:00   |       1 | Bars                    |
| Gorgeous Glo                           | NC    |           10 |   3.5 | 11:30-18:00 | 11:30-18:00 | 11:00-21:00 | 11:00-21:00 | 11:00-21:00 | 9:00-17:30  | 13:00-5:00  |       1 | Beauty & Spas           |
| The Cider Mill                         | AZ    |           91 |   4.0 | 10:00-18:00 | 10:00-18:00 | 10:00-18:00 | 10:00-20:00 | 10:00-20:00 | 10:00-20:00 | 11:00-16:00 |       0 | Beer                    |
| Otto Onkel                             | BW    |           50 |   3.0 | 12:00-22:00 | 12:00-22:00 | 12:00-22:00 | 12:00-22:00 | 12:00-22:00 | 12:00-22:00 | 12:00-22:00 |       1 | Beer Garden             |
| PRO BIKE+RUN                           | PA    |            8 |   5.0 | 10:00-20:00 | 10:00-20:00 | 10:00-20:00 | 10:00-20:00 | 10:00-20:00 | 10:00-18:00 | 12:00-17:00 |       1 | Bike Repair/Maintenance |
| PRO BIKE+RUN                           | PA    |            8 |   5.0 | 10:00-20:00 | 10:00-20:00 | 10:00-20:00 | 10:00-20:00 | 10:00-20:00 | 10:00-18:00 | 12:00-17:00 |       1 | Bikes                   |
| What A Bagel                           | ON    |            8 |   3.0 | 6:00-15:30  | 6:00-15:30  | 6:00-15:30  | 6:00-15:30  | 6:00-15:30  | 6:00-15:30  | None        |       1 | Breakfast & Brunch      |
| Alterations Express                    | OH    |            3 |   4.0 | 8:00-19:00  | 8:00-19:00  | 8:00-19:00  | 8:00-19:00  | 8:00-19:00  | 8:00-18:00  | None        |       1 | Bridal                  |
| McDonald's                             | AZ    |            8 |   2.0 | 9:00-21:00  | 9:00-21:00  | 9:00-21:00  | 9:00-21:00  | 9:00-21:00  | 9:00-21:00  | 5:00-23:00  |       1 | Burgers                 |
| B.A. Sweetie Candy                     | OH    |           49 |   4.0 | 10:00-20:00 | 10:00-20:00 | 10:00-20:00 | 10:00-20:00 | 10:00-20:00 | 10:00-20:00 | 11:00-17:00 |       1 | Candy Stores            |
| Health For Life: North Mesa            | AZ    |           16 |   4.5 | 9:00-20:00  | 9:00-20:00  | 9:00-20:00  | 9:00-20:00  | 9:00-20:00  | 9:00-20:00  | 9:00-20:00  |       1 | Cannabis Clinics        |
+----------------------------------------+-------+--------------+-------+-------------+-------------+-------------+-------------+-------------+-------------+-------------+---------+-------------------------+
(Output limit exceeded, 25 of 137 total rows shown)
         
         
iv. Provide the SQL code you used to create your final dataset:

SELECT 
business.name
,business.state
,business.review_count
,business.stars,
MAX(CASE
WHEN hours.hours LIKE "%monday%" THEN TRIM(hours.hours,'%MondayTuesWednesThursFriSatSun|%') 
END) AS M
,MAX(CASE
WHEN hours.hours LIKE "%tuesday%" THEN TRIM(hours.hours,'%MondayTuesWednesThursFriSatSun|%') 
END) AS Tue
,MAX(CASE
WHEN hours.hours LIKE "%wednesday%" THEN TRIM(hours.hours,'%MondayTuesWednesThursFriSatSun|%') 
END) AS W
,MAX(CASE
WHEN hours.hours LIKE "%thursday%" THEN TRIM(hours.hours,'%MondayTuesWednesThursFriSatSun|%') 
END) AS Thu
,MAX(CASE
WHEN hours.hours LIKE "%friday%" THEN TRIM(hours.hours,'%MondayTuesWednesThursFriSatSun|%') 
END) AS F
,MAX(CASE
WHEN hours.hours LIKE "%saturday%" THEN TRIM(hours.hours,'%MondayTuesWednesThursFriSatSun|%') 
END) AS Sat
,MAX(CASE
WHEN hours.hours LIKE "%sunday%" THEN TRIM(hours.hours,'%MondayTuesWednesThursFriSatSun|%') 
END) AS Sun
,is_open
,category.category AS categories
FROM business
INNER JOIN hours
ON business.id = hours.business_id
INNER JOIN category
ON business.id = category.business_id
INNER JOIN attribute
ON business.id = attribute.business_id
GROUP BY category.category;